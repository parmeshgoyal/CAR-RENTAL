import java.awt.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.*;

class Car {
    private String carId;
    private String brand;
    private String model;
    private double basePricePerDay;
    private boolean isAvailable;

    public Car(String carId, String brand, String model, double basePricePerDay) {
        this.carId = carId;
        this.brand = brand;
        this.model = model;
        this.basePricePerDay = basePricePerDay;
        this.isAvailable = true;
    }

    public boolean isAvailable() {
        return isAvailable;
    }

    public String getBrand() {
        return brand;
    }

    public String getModel() {
        return model;
    }

    public double calculatePrice(int rentalDays) {
        return basePricePerDay * rentalDays;
    }

    public void rent() {
        isAvailable = false;
    }
}

class Customer {
    private String customerId;
    private String name;

    public Customer(String customerId, String name) {
        this.customerId = customerId;
        this.name = name;
    }

    public String getCustomerId() {
        return customerId;
    }

    public String getName() {
        return name;
    }
}

class Rental {
    private Car car;
    private Customer customer;
    private int days;

    public Rental(Car car, Customer customer, int days) {
        this.car = car;
        this.customer = customer;
        this.days = days;
    }

    public Car getCar() {
        return car;
    }

    public Customer getCustomer() {
        return customer;
    }

    public int getDays() {
        return days;
    }
}

class CarRentalGUI extends JFrame {
    private List<Car> cars;
    private List<Customer> customers;
    private List<Rental> rentals;

    private JComboBox<String> carComboBox;
    private JTextField daysTextField;
    private JLabel totalPriceLabel;

    public CarRentalGUI() {
        super("Car Rental System");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(400, 300);
        setLocationRelativeTo(null);

        cars = new ArrayList<>();
        customers = new ArrayList<>();
        rentals = new ArrayList<>();

        // Add some sample cars
        cars.add(new Car("C001", "Toyota", "Camry", 60.0));
        cars.add(new Car("C002", "Honda", "Accord", 70.0));
        cars.add(new Car("C003", "Mahindra", "Thar", 150.0));

        createGUI();
    }

    private void createGUI() {
        JPanel panel = new JPanel(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(10, 10, 10, 10);

        gbc.gridx = 0;
        gbc.gridy = 0;
        panel.add(new JLabel("Available Cars:"), gbc);

        gbc.gridx = 1;
        gbc.gridy = 0;
        carComboBox = new JComboBox<>();
        for (Car car : cars) {
            if (car.isAvailable()) {
                carComboBox.addItem(car.getBrand() + " " + car.getModel());
            }
        }
        panel.add(carComboBox, gbc);

        gbc.gridx = 0;
        gbc.gridy = 1;
        panel.add(new JLabel("Rental Days:"), gbc);

        gbc.gridx = 1;
        gbc.gridy = 1;
        daysTextField = new JTextField(10);
        panel.add(daysTextField, gbc);

        gbc.gridx = 0;
        gbc.gridy = 2;
        panel.add(new JLabel("Total Price:"), gbc);

        gbc.gridx = 1;
        gbc.gridy = 2;
        totalPriceLabel = new JLabel();
        panel.add(totalPriceLabel, gbc);

        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.gridwidth = 2;
        JButton rentButton = new JButton("Rent");
        rentButton.addActionListener(e -> rentCar());
        panel.add(rentButton, gbc);

        add(panel, BorderLayout.CENTER);
    }

    private void rentCar() {
        int selectedIndex = carComboBox.getSelectedIndex();
        if (selectedIndex >= 0) {
            Car selectedCar = cars.get(selectedIndex);
            int rentalDays = Integer.parseInt(daysTextField.getText());
            double totalPrice = selectedCar.calculatePrice(rentalDays);
            totalPriceLabel.setText(String.format("$%.2f", totalPrice));

            // Rent the car and update the GUI
            selectedCar.rent();
            carComboBox.removeItemAt(selectedIndex);
            daysTextField.setText("");
            totalPriceLabel.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Please select a car to rent.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            CarRentalGUI gui = new CarRentalGUI();
            gui.setVisible(true);
        });
    }
}